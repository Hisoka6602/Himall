@model Himall.DTO.ShopShipper

@{
    ViewBag.Title = "添加发收货地址";
    bool haswx = !string.IsNullOrWhiteSpace(ViewBag.ticket);
    var qqmapkey = Himall.Application.SiteSettingApplication.SiteSettings.QQMapAPIKey;
}
<style type="text/css">
    .form-control.input-validation-error {
        border: #f00 1px solid;
    }

    #area-selector select {
        max-width: 250px;
    }
</style>

<div class="container clear-v20">
    <ul class="nav nav-tabs-custom clearfix" id="ulMenu">
        <strong>发/退货地址</strong>
        <li><a href="@Url.Action("Management")">管理</a></li>
        <li class="active"><a>新增</a></li>
    </ul>
    <div class="queryDiv">
        <img class="queryImg" src="/Images/ic_query.png">
        <div class="tipBox">
            <h5>温馨提示:</h5>
            <ul>
                <li><span>可以选择一个发/退货地址作为默认地址，买家退货时会自动选择默认退货地址，不再需要买家输入。</span></li>
            </ul>
        </div>
    </div>
  <input type="hidden" id="qqMapKey" value="@qqmapkey" />
    @using (Ajax.BeginForm("Save", "ShopShipper", null
                    , new AjaxOptions { HttpMethod = "post", OnBegin = "beginpost", OnSuccess = "successpost" }
                    , new { @class = "form-horizontal", id = "addform" }))
    {
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.ShopId)
        @Html.HiddenFor(m => m.Longitude)
        @Html.HiddenFor(m => m.Latitude)

        <div class="form-group">
            <label class="col-sm-2 control-label" for=""><b style="color:red;">*</b>发货点名称：</label>
            <div class="col-sm-3">@Html.TextBoxFor(m => m.ShipperTag, new { @class = "form-control input-sm", placeholder = "用来选择从哪个点发货" })</div>
            <div class="col-sm-3">@Html.ValidationMessageFor(m => m.ShipperTag)</div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label" for=""><b style="color:red;">*</b>发货人姓名：</label>
            <div class="col-sm-3">@Html.TextBoxFor(m => m.ShipperName, new { @class = "form-control input-sm", placeholder = "" })</div>
            <div class="col-sm-3">@Html.ValidationMessageFor(m => m.ShipperName)</div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label" for=""><b style="color:red;">*</b>发货地区：</label>
            <div class="col-sm-9">
                <div id="area-selector"></div>
                @Html.HiddenFor(d => d.RegionId)
            </div>
            <div class="col-sm-2">@Html.ValidationMessageFor(m => m.RegionId)</div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label" for=""><b style="color:red;">*</b>发货详细地址：</label>
            <div class="col-sm-3">@Html.TextBoxFor(m => m.Address, new { @class = "form-control input-sm", placeholder = "长度在1-60个字符之间" })</div>
            <div class="col-sm-2" style="padding-left: 0;"><a class="btn btn-default" id="js_search_pos" onclick="getResult()">搜索地图</a></div>
            <div class="col-sm-3">@Html.ValidationMessageFor(m => m.Address)</div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label" for=""><b style="color:red;">*</b>地图定位：</label>
            <div class="col-sm-8">
                <div class="map-box" id="container" style="width: 603px; height: 300px; float: left;"></div>
                <div class="des" id="map_des" style="display: none; float: left;">请选择一个地址并点击地图中的“导入地址”</div>
                <div class="info-box" id="infoDiv" style="display: none"></div>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label" for=""><b style="color:red;">*</b>发货人手机号：</label>
            <div class="col-sm-3">@Html.TextBoxFor(m => m.TelPhone, new { @class = "form-control input-sm", placeholder = "只能为11位数字" })</div>
            <div class="col-sm-3">@Html.ValidationMessageFor(m => m.TelPhone)</div>
        </div>
        <div class="form-group" style="@(haswx?"":"display:none;")">
            <label class="col-sm-2 control-label" for="">微信OpenId：</label>
            <div class="col-sm-3">@Html.TextBoxFor(m => m.WxOpenId, new { @class = "form-control input-sm" })</div>
            <div class="col-sm-3">@Html.ValidationMessageFor(m => m.WxOpenId)</div>
        </div>
        <div class="form-group" style="@(haswx?"":"display:none;")">
            <label class="col-sm-2 control-label" for="">获取OpenId：</label>
            <div class="col-sm-5">
                <img width="150" height="150" src="https://mp.weixin.qq.com/cgi-bin/showqrcode?ticket=@ViewBag.ticket" id="sceneQR" />
                <br />
                <span>请使用发货人的微信进行扫码</span>
                <br />
                <span class="red">注意：需要后台开启订单付款时的模板消息</span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <button type="submit" class="btn btn-primary" id="bt-save" style="width: 150px;padding: 10px 15px !important;">保 存</button>
            </div>
        </div>
    }
</div>
<input type="hidden" value="@Url.Action("Management")" id="urlManagement" />
<input type="hidden" value="@(haswx?"1":"0")" id="haswx" />
@Html.Action("JsMapQQKey", "WebCommon", new { area = "Web" })
<script src="~/Scripts/jquery.himall.Region.js"></script>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>


<script type="text/javascript">
    var sceneid = '@ViewBag.Sceneid';
    var btsubmit;
    var loading;

    var isposting = false;
    $(function () {
        $("#area-selector").RegionSelector({
            selectClass: "input-sm select-sort-auto",
            valueHidden: "#RegionId"
        });
        btsubmit = $("#bt-save");

        //提交前检测
        $("#addform").bind("submit", function (e) {
            var _t = $(this);
            var isdataok = checkData();

            return isdataok;
        });
        if ($("#haswx").val()=="1") {
            checkScanState();
        }
        initMap();//初始化门店地图
    });
    function checkData() {
        if ($.trim($('#ShipperTag').val()).length == 0) {
            $.dialog.tips('发货点名称不能为空');
            return false;
        }
        if ($('#ShipperName').val().length ==0) {
            $.dialog.tips('发货人姓名不能为空');
            return false;
        }
        if ($('#RegionId').val().length == 0) {
            $.dialog.tips('发货地区不能为空');
            return false;
        }
        if ($('#Address').val().length == 0) {
            $.dialog.tips('详细地址不能为空');
            return false;
        }
        if ($('#Address').val().length > 60) {
            $.dialog.tips('详细地址不能超过60个字');
            return;
        }
        if (Number($("#Longitude").val()) <= 0 || Number($("#Latitude").val()) <= 0) {
            $.dialog.tips('请搜索地址地图定位');
            return false;
        }
        var reg1 = /^[1-9]\d{10}$/;
        var str = $('#TelPhone').val();
        if (!reg1.test(str)) {
            $.dialog.tips('发货人手机号只能为11位数字');
            return false;
        }
        return true;
    }

    function beginpost() {

        if (isposting) {
            $.dialog.tips("数据提交中...");
            return false;
        }
        isposting = true;
        btsubmit.text("提交中...");
        loading = showLoading();
    }

    function successpost(data) {
        isposting = false;
        btsubmit.text("保 存");
        loading.close();
        if (data.success == true) {
            $.dialog.tips("保存发收货地址成功", function () {
                window.location.href = $("#urlManagement").val();//数据提交成功页面跳转
            });
        } else {
            $.dialog.errorTips(data.msg);
        }
    }

    function checkScanState() {
        if (sceneid > 0) {
            $.getJSON('/ScanState/GetStateToShop', { sceneid: sceneid }, function (result) {
                if (result.success) {
                    opid = result.data.OpenId;
                    $("#WxOpenId").val(opid);
                    $.dialog.succeedTips('扫码成功!');
                }
                else {
                    setTimeout(checkScanState, 0);
                }
            });
        }
    }

    var map, marker, markers = [], infoWin = null;
    var initMap = function () {
        var longitude = $("#Longitude").val();
        var latitude = $("#Latitude").val();
        var isedit = $("#Id").val()>0;
        latitude = latitude || 39.916527;
        longitude = longitude || 116.397128;
        var center = new qq.maps.LatLng(latitude, longitude);
        map = new qq.maps.Map(document.getElementById('container'), {
            center: center,
            zoom: 13
        });
        var scaleControl = new qq.maps.ScaleControl({
            align: qq.maps.ALIGN.BOTTOM_LEFT,
            margin: qq.maps.Size(85, 15),
            map: map
        });
        if (isedit) {
            marker = new qq.maps.Marker({
                position: center,
                map: map,
                draggable: true
            });
            qq.maps.event.addListener(marker, 'dragend', function () {
                if (marker.getPosition()) {
                    $("#Longitude").val(marker.getPosition().getLng());
                    $("#Latitude").val(marker.getPosition().getLat());
                }
            });
        }
        //调用Poi检索类
         window.searchService = function(res) {
        	var pois = res.data;
        	infoWin = new qq.maps.InfoWindow({
        		map: map
        	});
        	var latlngBounds = new qq.maps.LatLngBounds();
        	for (var i = 0, l = pois.length; i < l; i++) {
        		var poi = pois[i];
        		//扩展边界范围，用来包含搜索到的Poi点
        		poi.latLng = new qq.maps.LatLng(poi.location.lat, poi.location.lng)
        		var position = new qq.maps.LatLng(poi.location.lat, poi.location.lng);
        		latlngBounds.extend(poi.latLng);
        		(function(n) {
        			var marker = new qq.maps.Marker({
        				map: map
        			});
        			marker.setPosition(pois[n].latLng);
        			markers.push(marker);
        			qq.maps.event.addListener(marker, 'click', function() {
        				infoWin.open();
        				infoWin.setContent('<div style="width:200px;padding:10px 0;">' + pois[n].address +
        					'<div class="map-import-btn"><input type="button" class="btn btn-xs btn-primary" value="导入经纬度" onclick="chooseShopLoc(this);" address=' +
        					pois[n].address + ' lat =' + pois[n].location.lat + '  lng =' + pois[n].location.lng +
        					' /></div></div>');
        				infoWin.setPosition(pois[n].latLng);
        			});
        		})(i);
        	}
        	//调整地图视野
        	map.fitBounds(latlngBounds);
        };
  }

  function mapServiceRequest(data) {
			$.ajax({
				url: 'https://apis.map.qq.com/ws/place/v1/search?key=' + $('#qqMapKey').val(),
				data: data,
				type: 'get',
				dataType: 'jsonp',
				jsonpCallback: 'searchService'
			});
		}
    //导入信息
    function chooseShopLoc(t) {
        var address = $(t).attr("address");
        var storeAreaArr = getSelectArea();
        for (var i = 0; i < storeAreaArr.length; i++) {
            if (i <= 3) {
                address = address.replace(storeAreaArr[i], '');
            }
        }
        var lat = $(t).attr("lat");
        var lng = $(t).attr("lng");
        this.clearMarkers();
        var position = new qq.maps.LatLng(lat, lng);
        marker = new qq.maps.Marker({
            map: map,
            position: position,
            draggable: true
        });
        map.panTo(position);
        map.zoomTo(18);
        $("#Longitude").val(lng);
        $("#Latitude").val(lat);
        qq.maps.event.addListener(marker, 'dragend', function () {
            if (marker.getPosition()) {
                $("#Longitude").val(marker.getPosition().getLng());
                $("#Latitude").val(marker.getPosition().getLat());
            }
        });
        $("#Address").val(address);
        if (infoWin) {
            infoWin.close();
        }
        $("#map_des").hide();
    }
    ////删除所有标记
    function clearMarkers() {
        if (markers) {
            for (i = 0; i < markers.length; i++) {
                markers[i].setMap(null);
            }
            markers.length = 0;
        }
    }
    function getSelectArea() {
        var storeArr = [];
        $("#area-selector select").each(function (i) {
            if ($(this).find("option:selected").text() != '请选择') {
                storeArr.push($(this).find("option:selected").text());
            }
        });
        return storeArr;
    }
    //搜索地址，这里需要判断是否选择了省市区
    function getResult() {
        if ($("#RegionId").val() <= 0) {
            $.dialog.tips("请先选择地区");
            return;
        }
        if ($.trim($("#Address").val()).length == 0) {
            $.dialog.tips("请先输入详细地址");
            return;
        }
        if (marker != null) marker.setMap(null);
        clearMarkers();
        if (infoWin) {
            infoWin.close();
        }
        var storeArr = getSelectArea();
        mapServiceRequest({
        	keyword: storeArr[0] + storeArr[1] + storeArr[2] + $.trim($("#Address").val()),
        	boundary: 'region(' + storeArr[1] + ',0)',
        	output: 'jsonp'
        })
        $("#map_des").show();
    }


</script>